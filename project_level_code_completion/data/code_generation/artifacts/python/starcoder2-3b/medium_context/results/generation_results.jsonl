{"original_prediction": "            fuzz_blockers = self.get_fuzz_blockers(profile)\n\n       ", "prediction_line": "            fuzz_blockers = self.get_fuzz_blockers(profile)", "ground_truth": "            fuzz_blockers = self.get_fuzz_blockers(", "line_class": "infile", "zero_context": true}
{"original_prediction": "#        logger.info(f\"Writing calltree to {calltree_html_file}\")\n       ", "prediction_line": "#        logger.info(f\"Writing calltree to {calltree_html_file}\")", "ground_truth": "        self.html_create_dedicated_calltree_file(", "line_class": "infile", "zero_context": true}
{"original_prediction": "#        fuzz_blockers = self.get_fuzz_blockers(", "prediction_line": "#        fuzz_blockers = self.get_fuzz_blockers(", "ground_truth": "        fuzz_blocker_table = self.create_fuzz_blocker_table(profile, [], \"\", fuzz_blockers)", "line_class": "infile", "zero_context": true}
{"original_prediction": "            callsite_name = node.cov_callsite_name\n           ", "prediction_line": "            callsite_name = node.cov_callsite_name", "ground_truth": "            ct_idx_str = self.create_str_node_ctx_idx(str(node.cov_ct_idx))", "line_class": "infile", "zero_context": true}
{"original_prediction": "            blocker_idxs.append(node.cov_ct_idx)\n       ", "prediction_line": "            blocker_idxs.append(node.cov_ct_idx)", "ground_truth": "            blocker_idxs.append(self.create_str_node_ctx_idx(str(node.cov_ct_idx)))", "line_class": "infile", "zero_context": true}
{"original_prediction": "#            calltree_html_string += \"<div class='calltree-node'>\"\n           ", "prediction_line": "#            calltree_html_string += \"<div class='calltree-node'>\"", "ground_truth": "            demangled_name = fuzz_utils.demangle_cpp_func(node.dst_function_name)", "line_class": "inproject", "zero_context": true}
{"original_prediction": "            profile: fuzz_data_loader.FuzzerProfile,\n           ", "prediction_line": "            profile: fuzz_data_loader.FuzzerProfile,", "ground_truth": "            profile: fuzz_data_loader.FuzzerProfile,", "line_class": "inproject", "zero_context": true}
{"original_prediction": "                      html_file_name: str,\n                     ", "prediction_line": "                      html_file_name: str,", "ground_truth": "                      project_profile: fuzz_data_loader.MergedProjectProfile,", "line_class": "inproject", "zero_context": true}
{"original_prediction": "                      project_name: str,\n                     ", "prediction_line": "                      project_name: str,", "ground_truth": "                      profiles: List[fuzz_data_loader.FuzzerProfile],", "line_class": "inproject", "zero_context": true}
{"original_prediction": "            profile,\n    ):\n       ", "prediction_line": "            profile,", "ground_truth": "            profile: fuzz_data_loader.FuzzerProfile):", "line_class": "inproject", "zero_context": true}
{"original_prediction": "        fuzz_blockers = []\n       ", "prediction_line": "        fuzz_blockers = []", "ground_truth": "        blocker_list: List[fuzz_cfg_load.CalltreeCallsite] = list()", "line_class": "inproject", "zero_context": true}
{"original_prediction": "            html_table_string += fuzz_html_helpers.html_create_table_row(\n               ", "prediction_line": "            html_table_string += fuzz_html_helpers.html_create_table_row(", "ground_truth": "            html_table_string += fuzz_html_helpers.html_table_add_row([", "line_class": "inproject", "zero_context": true}
{"original_prediction": " found\n        calltree_nodes = fuzz_cfg_load.extract_all_callsites(\n           ", "prediction_line": " found", "ground_truth": "        all_callsites = fuzz_cfg_load.extract_all_callsites(profile.function_call_depths)", "line_class": "inproject", "zero_context": true}
{"original_prediction": "        complete_html_string += f\"\"\"", "prediction_line": "        complete_html_string += f\"\"\"", "ground_truth": "        html_header = fuzz_html_helpers.html_get_header(", "line_class": "inproject", "zero_context": true}
{"original_prediction": "        html_table_string += f\"<table id='{tables[-1]}' class='table table-striped'>\"\n       ", "prediction_line": "        html_table_string += f\"<table id='{tables[-1]}' class='table table-striped'>\"", "ground_truth": "        html_table_string += fuzz_html_helpers.html_create_table_head(", "line_class": "inproject", "zero_context": true}
{"original_prediction": "            project_name=profile.project_name,\n           ", "prediction_line": "            project_name=profile.project_name,", "ground_truth": "            title=f\"Fuzz introspector: { profile.get_key() }\"", "line_class": "inproject", "zero_context": true}
{"original_prediction": "        calltree_html_string += \"<p>This is the calltree of the fuzzer. \"\n       ", "prediction_line": "        calltree_html_string += \"<p>This is the calltree of the fuzzer. \"", "ground_truth": "        nodes = fuzz_cfg_load.extract_all_callsites(profile.function_call_depths)", "line_class": "inproject", "zero_context": true}
{"original_prediction": "\"\"\"\nThis module contains the main entry point for the Fuzz Introspector.", "prediction_line": "\"\"\"", "ground_truth": "\"\"\"Logic related to calltree analysis\"\"\"", "line_class": "non_informative", "zero_context": true}
{"original_prediction": "/fuzz_introspector/fuzz_introspector.py", "prediction_line": "/fuzz_introspector/fuzz_introspector.py", "ground_truth": "        # Get the fuzz blockers", "line_class": "non_informative", "zero_context": true}
{"original_prediction": "#        complete_html_string += fuzz_html_helpers.create_html_header(", "prediction_line": "#        complete_html_string += fuzz_html_helpers.create_html_header(", "ground_truth": "        # HTML start", "line_class": "non_informative", "zero_context": true}
{"original_prediction": "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000", "prediction_line": "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000", "ground_truth": "# Copyright 2022 Fuzz Introspector Authors", "line_class": "non_informative", "zero_context": true}
{"original_prediction": "/fuzz_introspector/fuzz_analysis/fuzz_analysis_interface.py", "prediction_line": "/fuzz_introspector/fuzz_analysis/fuzz_analysis_interface.py", "ground_truth": "    def create_fuzz_blocker_table(", "line_class": "non_informative", "zero_context": true}
{"original_prediction": "                      fuzz_data_loader: fuzz_data_loader.FuzzDataLoader,\n                     ", "prediction_line": "                      fuzz_data_loader: fuzz_data_loader.FuzzDataLoader,", "ground_truth": "                      toc_list: List[Tuple[str, str, int]],", "line_class": "random", "zero_context": true}
{"original_prediction": "                    # Same depth, so we need to add a new line\n                   ", "prediction_line": "                    # Same depth, so we need to add a new line", "ground_truth": "                    calltree_html_string += \"</div>\"", "line_class": "random", "zero_context": true}
{"original_prediction": "            if node.cov_color == \"green\":\n               ", "prediction_line": "            if node.cov_color == \"green\":", "ground_truth": "            callsite_link = node.cov_callsite_link", "line_class": "random", "zero_context": true}
{"original_prediction": "            calltree_html_string: str,\n           ", "prediction_line": "            calltree_html_string: str,", "ground_truth": "            calltree_html_string,", "line_class": "random", "zero_context": true}
{"original_prediction": "        html_table_string += \"<table class='table table-striped'>\"\n       ", "prediction_line": "        html_table_string += \"<table class='table table-striped'>\"", "ground_truth": "        tables.append(f\"myTable{len(tables)}\")", "line_class": "random", "zero_context": true}
